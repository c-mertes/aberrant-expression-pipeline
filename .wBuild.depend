######
#This is a autogenerated snakemake file by wBuild
#wBuild by Leonhard Wachutka
######

rule Scripts_Counting_countReads_R:
    input: sample_bam = standardFileNames("Data/helmholtz/{sampleID}/RNAout/paired-endout/stdFilenames/{sampleID}.bam"), features = config["PROC_RESULTS"] + "/{annotation}/counts/exons_by_gene_op.Rds", RScript = 'Scripts/Counting/countReads.R'
    output: counts = config["PROC_RESULTS"] + "/{annotation}/counts/{sampleID,[^/]+}.Rds"
    script: 'Scripts/Counting/countReads.R'


rule Scripts_Counting_count_ranges_R:
    input: gtex_txdb = config["PROC_RESULTS"] + "/v19/txdb.db", gencode_txdb = config["PROC_RESULTS"] + "/v29/txdb.db", RScript = 'Scripts/Counting/count_ranges.R'
    output: gtex_op = config["PROC_RESULTS"] + "/v19/counts/exons_by_gene_op.Rds", gencode_op = config["PROC_RESULTS"] + "/v29/counts/exons_by_gene_op.Rds", gencode_ov_op = config["PROC_RESULTS"] + "/v29_overlap/counts/exons_by_gene_op.Rds"
    script: 'Scripts/Counting/count_ranges.R'


rule Scripts_Counting_mergeCounts_R:
    input: counts = lambda wildcards: expand(config["PROC_RESULTS"] + "/{{annotation}}/counts/{sampleID}.Rds", sampleID=config["outrider"][wildcards.dataset]), gene_annot_dt = '/s/project/genetic_diagnosis/resource/gencode_{annotation}_unique_gene_name.tsv', RScript = 'Scripts/Counting/mergeCounts.R'
    output: counts = config["PROC_RESULTS"] + "/{annotation}/counts/{dataset}/total_counts.Rds"
    threads: 30
    script: 'Scripts/Counting/mergeCounts.R'


rule Scripts_Counting_unique_gene_name_R:
    input: gtex_gtf = 'resources/gencode.v19.genes.patched_contigs.gtf.gz', gencode_gtf = '/s/genomes/human/hg19/gencode29/gencode.v29lift37.annotation.gtf.gz', RScript = 'Scripts/Counting/unique_gene_name.R'
    output: gtex_dt = '/s/project/genetic_diagnosis/resource/gencode_v19_unique_gene_name.tsv', gencode_dt = '/s/project/genetic_diagnosis/resource/gencode_v29_unique_gene_name.tsv'
    script: 'Scripts/Counting/unique_gene_name.R'


rule Scripts_Outrider_FilterAnalysis_R:
    input: ods_ss = config["PROC_RESULTS"] + "/v29_overlap/outrider/fib_ss/ods_unfitted.Rds", ods_ns = config["PROC_RESULTS"] + "/v29_overlap/outrider/fib_ns/ods_unfitted.Rds", RScript = 'Scripts/Outrider/FilterAnalysis.R'
    output: wBhtml = 'Output/html/Scripts_Outrider_FilterAnalysis.html'
    script: '.wBuild/wBRender.R'


rule Scripts_Outrider_OutriderResults_R:
    input: res_ss = config["PROC_RESULTS"] + "/v29_overlap/outrider/fib_ss/OUTRIDER_results.tsv", res_ns = config["PROC_RESULTS"] + "/v29_overlap/outrider/fib_ns/OUTRIDER_results.tsv", RScript = 'Scripts/Outrider/OutriderResults.R'
    output: results = config["PROC_RESULTS"] + "/v29_overlap/outrider/OUTRIDER_results.tsv", wBhtml = 'Output/html/Scripts_Outrider_OutriderResults.html'
    script: '.wBuild/wBRender.R'


rule Scripts_Outrider_OutriderSummary_R:
    input: ods = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/ods.Rds", functions = 'Scripts/_functions/gene_annotation/add_gene_info_cols.R', results = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/OUTRIDER_results.tsv", results_public = '/s/public_webshare/project/genetic_diagnosis/results/{annotation}/OUTRIDER_results_{dataset}.tsv', RScript = 'Scripts/Outrider/OutriderSummary.R'
    output: wBhtml = 'Output/html/AberrantExpression/Outrider/{annotation}/OutriderSummary_{dataset}.html'
    script: '.wBuild/wBRender.R'


rule Scripts_Outrider_SummaryOverview_R:
    input: summaries = expand("Output/html/AberrantExpression/Outrider/{annotation}/OutriderSummary_{dataset}.html", annotation=config["ANNOTATIONS"] , dataset=[*config["outrider_filtered"]]), RScript = 'Scripts/Outrider/SummaryOverview.R'
    output: wBhtml = 'Output/html/Scripts_Outrider_SummaryOverview.html'
    script: '.wBuild/wBRender.R'


rule Scripts_Outrider_filterCounts_R:
    input: counts = config["PROC_RESULTS"] + "/{annotation}/counts/{dataset}/total_counts.Rds", txdb = config["PROC_RESULTS"] + "/{annotation}/txdb.db", RScript = 'Scripts/Outrider/filterCounts.R'
    output: ods = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/ods_unfitted.Rds", plot = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/filtered_hist.png", filtered_counts = config["PROC_RESULTS"] + "/{annotation}/counts/{dataset}/filtered_counts.Rds"
    script: 'Scripts/Outrider/filterCounts.R'


rule Scripts_Outrider_results_R:
    input: ods = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/ods.Rds", functions = 'Scripts/_functions/gene_annotation/add_gene_info_cols.R', RScript = 'Scripts/Outrider/results.R'
    output: results = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/OUTRIDER_results.tsv", results_all = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/OUTRIDER_results_all.Rds", results_public = '/s/public_webshare/project/genetic_diagnosis/results/{annotation}/OUTRIDER_results_{dataset}.tsv'
    script: 'Scripts/Outrider/results.R'


rule Scripts_Outrider_runOutrider_R:
    input: ods = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/ods_unfitted.Rds", RScript = 'Scripts/Outrider/runOutrider.R'
    output: ods = config["PROC_RESULTS"] + "/{annotation}/outrider/{dataset}/ods.Rds"
    threads: 30
    script: 'Scripts/Outrider/runOutrider.R'


rule Index:
    input: 
        "Output/html/Scripts_Outrider_FilterAnalysis.html",
        "Output/html/Scripts_Outrider_OutriderResults.html",
        "Output/html/Scripts_Outrider_SummaryOverview.html"
    output: "Output/html/index.html"
    run:
        import wbuild.createIndex
        wbuild.createIndex.ci()

